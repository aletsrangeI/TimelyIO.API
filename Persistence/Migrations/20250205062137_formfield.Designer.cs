// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistence.Context;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250205062137_formfield")]
    partial class formfield
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Catalogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Catalogos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Created = new DateTime(2024, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Descripcion = "Catalogo que identifica los roles de la aplicacion",
                            LastModified = new DateTime(2024, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            LastModifiedBy = "System",
                            Nombre = "Roles"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Created = new DateTime(2024, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Descripcion = "Catalogo que identifica las rutas de la aplicacion",
                            LastModified = new DateTime(2024, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            LastModifiedBy = "System",
                            Nombre = "Rutas"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Created = new DateTime(2024, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Descripcion = "Catalogo que identifica los formularios de la aplicacion",
                            LastModified = new DateTime(2024, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            LastModifiedBy = "System",
                            Nombre = "Formularios"
                        });
                });

            modelBuilder.Entity("Domain.Entities.ContenidoCatalogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<int>("CatalogoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Opcional")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CatalogoId");

                    b.ToTable("ContenidoCatalogos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CatalogoId = 1,
                            Created = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Descripcion = "Formulario de login",
                            LastModified = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastModifiedBy = "System",
                            Nombre = "Login",
                            Opcional = ""
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CatalogoId = 1,
                            Created = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Descripcion = "Formulario de registro",
                            LastModified = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastModifiedBy = "System",
                            Nombre = "Registro",
                            Opcional = ""
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CatalogoId = 0,
                            Created = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Descripcion = "Pantalla de login",
                            LastModified = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastModifiedBy = "System",
                            Nombre = "loginscreen",
                            Opcional = ""
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CatalogoId = 0,
                            Created = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Descripcion = "Pantalla de registar",
                            LastModified = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastModifiedBy = "System",
                            Nombre = "register",
                            Opcional = ""
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CatalogoId = 0,
                            Created = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Descripcion = "Pantalla de inicio",
                            LastModified = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastModifiedBy = "System",
                            Nombre = "Dashboard",
                            Opcional = ""
                        });
                });

            modelBuilder.Entity("Domain.Entities.FormField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<int?>("CatalogoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FormularioId")
                        .HasColumnType("integer");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Options")
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("Placeholder")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Validations")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CatalogoId");

                    b.HasIndex("FormularioId");

                    b.ToTable("FormFields", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CatalogoId = 0,
                            Created = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            FormularioId = 1,
                            Label = "Email/Usuario",
                            LastModified = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastModifiedBy = "System",
                            Name = "email",
                            Options = "[]",
                            Order = 0,
                            Placeholder = "Email/Usuario",
                            Type = "text",
                            Validations = "[]",
                            Value = " "
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CatalogoId = 0,
                            Created = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            FormularioId = 1,
                            Label = "Password",
                            LastModified = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastModifiedBy = "System",
                            Name = "password",
                            Options = "[]",
                            Order = 1,
                            Placeholder = "Password",
                            Type = "password",
                            Validations = "[]",
                            Value = " "
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CatalogoId = 0,
                            Created = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            FormularioId = 2,
                            Label = "Email/Usuario",
                            LastModified = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastModifiedBy = "System",
                            Name = "email",
                            Options = "[]",
                            Order = 0,
                            Placeholder = "Email/Usuario",
                            Type = "text",
                            Validations = "[]",
                            Value = " "
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CatalogoId = 0,
                            Created = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            FormularioId = 2,
                            Label = "Password",
                            LastModified = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastModifiedBy = "System",
                            Name = "password",
                            Options = "[]",
                            Order = 1,
                            Placeholder = "Password",
                            Type = "password",
                            Validations = "[]",
                            Value = " "
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CatalogoId = 0,
                            Created = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            FormularioId = 2,
                            Label = "Confirmar Password",
                            LastModified = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastModifiedBy = "System",
                            Name = "confirmPassword",
                            Options = "[]",
                            Order = 2,
                            Placeholder = "Confirmar Password",
                            Type = "password",
                            Validations = "[]",
                            Value = " "
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CatalogoId = 0,
                            Created = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            FormularioId = 2,
                            Label = "Nombre",
                            LastModified = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastModifiedBy = "System",
                            Name = "nombre",
                            Options = "[]",
                            Order = 3,
                            Placeholder = "Nombre",
                            Type = "text",
                            Validations = "[]",
                            Value = " "
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CatalogoId = 0,
                            Created = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            FormularioId = 2,
                            Label = "Apellido",
                            LastModified = new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastModifiedBy = "System",
                            Name = "apellido",
                            Options = "[]",
                            Order = 4,
                            Placeholder = "Apellido",
                            Type = "text",
                            Validations = "[]",
                            Value = " "
                        });
                });

            modelBuilder.Entity("Domain.Entities.ContenidoCatalogo", b =>
                {
                    b.HasOne("Domain.Entities.Catalogo", "Catalogo")
                        .WithMany()
                        .HasForeignKey("CatalogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalogo");
                });

            modelBuilder.Entity("Domain.Entities.FormField", b =>
                {
                    b.HasOne("Domain.Entities.Catalogo", "Catalogo")
                        .WithMany()
                        .HasForeignKey("CatalogoId");

                    b.HasOne("Domain.Entities.ContenidoCatalogo", "Formulario")
                        .WithMany()
                        .HasForeignKey("FormularioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalogo");

                    b.Navigation("Formulario");
                });
#pragma warning restore 612, 618
        }
    }
}
